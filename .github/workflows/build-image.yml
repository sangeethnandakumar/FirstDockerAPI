name: Build & Deploy Docker Container

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  # Dotnet Config
  DOTNET_VERSION: '8.0.0'
  PROJECT_PATH: './FirstDockerAPI/FirstDockerAPI.csproj'
  PUBLISH_DIR: './publish/'
  
  # Docker Config
  DOCKERFILE_PATH: '.'
  IMAGE_NAME: 'FirstDockerAPI'
  
  # Linux Config
  SERVER_SSH: ${{ secrets.DEPLOY_KEY }}
  SERVER_HOST: '4ih1.l.time4vps.cloud'
  SERVER_USERNAME: 'root'
  CONTAINER_PORT: 8080

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Build
        run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release --no-restore

      - name: Publish
        run: dotnet publish ${{ env.PROJECT_PATH }} --configuration Release --no-build --output ${{ env.PUBLISH_DIR }}

      - name: Build Docker Image
        run: docker build -t ${{ env.IMAGE_NAME }} ${{ env.DOCKERFILE_PATH }}

      - name: Save Docker Image
        run: docker save ${{ env.IMAGE_NAME }} | gzip > ${{ env.IMAGE_NAME }}.tar.gz

      - name: Copy Docker Image to VM
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USERNAME }}
          key: ${{ env.SERVER_SSH }}
          source: "./${{ env.IMAGE_NAME }}.tar.gz"
          target: "/tmp"

      - name: Load and Run Docker Image on VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USERNAME }}
          key: ${{ env.SERVER_SSH }}
          script: |
            docker load < /tmp/${{ env.IMAGE_NAME }}.tar.gz
            docker run -d -p ${{ env.CONTAINER_PORT }}:${{ env.CONTAINER_PORT }} ${{ env.IMAGE_NAME }}
